"use strict";

function _typeof(e) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    })(e)
}

function _classCallCheck(e, n) {
    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
}

function _defineProperties(e, n) {
    for (var t = 0; t < n.length; t++) {
        var i = n[t];
        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
    }
}

function _createClass(e, n, t) {
    return n && _defineProperties(e.prototype, n), t && _defineProperties(e, t), e
}

function _defineProperty(e, n, t) {
    return n in e ? Object.defineProperty(e, n, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[n] = t, e
}

var LeadForm = function () {
    function r(e) {
        if (
            _classCallCheck(this, r),
                _defineProperty(this, "ERROR_UNEXPECTED_RESULT", "Unexpected result"),
                _defineProperty(this, "ERROR_UNEXPECTED_SERVER_RESULT", "Unexpected server result"),
                _defineProperty(this, "ERROR_ACCOUNT_EXISTS", "Account already exists"),
                _defineProperty(this, "ERROR_TOO_MANY_REQUESTS", "Too many requests"),
                _defineProperty(this, "ERROR_COUNTRY_FORBIDDEN", "User country is forbidden according to jurisdiction data"),
                _defineProperty(this, "ERROR_UNEXPECTED_SIMPLELOGIN_RESPONSE", "Unexpected simple login response"),
                _defineProperty(this, "ERROR_UNEXPECTED_SIMPLELOGIN_ERROR", "Simple login error"),
                _defineProperty(this, "SUCCESS_AUTOLOGIN_REDIRECT", "Auto login has been succeed, redirect has been started"),
                _defineProperty(this, "SUCCESS_AUTOLOGIN", "Auto login has been succeed"),
                _defineProperty(this, "SUCCESS_LEAD_CREATED", "Account has been created"),
                _defineProperty(this, "ERROR_UNEXPECTED_RESULT_CODE", 1),
                _defineProperty(this, "ERROR_UNEXPECTED_SERVER_RESULT_CODE", 2),
                _defineProperty(this, "ERROR_ACCOUNT_EXISTS_CODE", 3),
                _defineProperty(this, "ERROR_COUNTRY_FORBIDDEN_CODE", 4),
                _defineProperty(this, "ERROR_TOO_MANY_REQUESTS_CODE", 5),
                _defineProperty(this, "ERROR_UNEXPECTED_SIMPLELOGIN_RESPONSE_CODE", 6),
                _defineProperty(this, "ERROR_UNEXPECTED_SIMPLELOGIN_ERROR_CODE", 7),
                _defineProperty(this, "DEFAULT_APPSOURCE", 8), _defineProperty(this, "config", {
                lang: "",
                apiUrl: "",
                platformUrl: "",
                onDone: null,
                isDebug: !1,
                alwaysEligible: !1,
                appSource: this.DEFAULT_APPSOURCE,
                redirectOnSimpleLogin: !0
            }), _defineProperty(this, "leadLanguageMapping", {cz: "cs"}), _defineProperty(this, "translations", {
                WE_ARE_CURRENTLY_CANNOT_ACCEPT_CUSTOMERS: {
                    en: "We are sorry, but we currently cannot accept customers from your country.",
                    es: "Lamentamos comunicarle que en estos momentos no podemos aceptar operadores de su paÃ­s.",
                    fr: "Nous sommes dÃ©solÃ©s, mais nous ne pouvons actuellement pas accepter de clients de votre pays.",
                    it: "Siamo spiacenti ma al momento non possiamo accettare clienti dal suo paese",
                    ar: "Ù†Ø¹ØªØ°Ø±ØŒ ÙˆÙ„ÙƒÙ†Ù†Ø§ Ù„Ø§ Ù†Ù‚Ø¨Ù„ Ø§Ù„Ø¹Ù…Ù„Ø§Ø¡ Ù…Ù† Ø¯ÙˆÙ„ØªÙƒ ÙÙŠ Ø§Ù„ÙˆÙ‚Øª Ø§Ù„Ø­Ø§Ù„ÙŠ.",
                    de: "Leider kÃ¶nnen wir derzeit keine Kunden aus Ihrem Land annehmen",
                    nl: "Helaas is het op dit moment niet mogelijk om geen cliÃ«nten uit uw land te accepteren.",
                    cz: "OmlouvÃ¡me se, ale v souÄasnÃ© dobÄ› nemÅ¯Å¾eme pÅ™ijÃ­mat klienty z VaÅ¡Ã­ zemÄ›",
                    pl: "Przepraszamy, ale obecnie nie moÅ¼emy przyjmowaÄ‡ klientÃ³w z Twojego kraju.",
                    pt: "Lamentamos, mas de momento nÃ£o podemos aceitar clientes do seu paÃ­s.",
                    sk: "Je nÃ¡m Ä¾Ãºto, no momentÃ¡lne neprijÃ­mame klientov z VaÅ¡ej krajiny.",
                    sv: "Vi beklagar att vi fÃ¶r nÃ¤rvarande inte accepterar klienter frÃ¥n ditt land. ",
                    ru: "Ð˜Ð·Ð²Ð¸Ð½Ð¸Ñ‚Ðµ, Ð½Ð¾ Ð² Ð½Ð°ÑÑ‚Ð¾ÑÑ‰ÐµÐµ Ð²Ñ€ÐµÐ¼Ñ Ð¼Ñ‹ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÐ¼ Ñ€Ð°Ð±Ð¾Ñ‚Ð°Ñ‚ÑŒ Ñ ÐºÐ»Ð¸ÐµÐ½Ñ‚Ð°Ð¼Ð¸ Ð¸Ð· Ð²Ð°ÑˆÐµÐ¹ ÑÑ‚Ñ€Ð°Ð½Ñ‹",
                    hu: "SajnÃ¡ljuk, de jelenleg nem tudunk Ã¼gyfeleket fogadni az Ã–n orszÃ¡gÃ¡bÃ³l",
                    ro: "Ne pare rÄƒu, dar momentan nu putem accepta clienÈ›i din È›ara dumneavoastrÄƒ.",
                    lt: "Apgailestaujame, bet Å¡iuo metu negalime priimti klientÅ³ iÅ¡ jÅ«sÅ³ Å¡alies",
                    da: "Vi beklager, men vi kan i Ã¸jeblikket ikke acceptere kunder fra dit land",
                    fi: "Emme valitettavasti voi hyvÃ¤ksyÃ¤ tÃ¤llÃ¤ hetkellÃ¤ asiakkaita sinun maastasi.",
                    no: "Vi beklager, men for Ã¸yeblikket godkjenner vi ikke kunder fra landet ditt",
                    bg: "Ð¡ÑŠÐ¶Ð°Ð»ÑÐ²Ð°Ð¼Ðµ, Ð½Ð¾ Ð² Ð¼Ð¾Ð¼ÐµÐ½Ñ‚Ð° Ð½Ðµ Ð¼Ð¾Ð¶ÐµÐ¼ Ð´Ð° Ð¿Ñ€Ð¸ÐµÐ¼ÐµÐ¼ ÐºÐ»Ð¸ÐµÐ½Ñ‚Ð¸ Ð¾Ñ‚ Ð²Ð°ÑˆÐ°Ñ‚Ð° Ð´ÑŠÑ€Ð¶Ð°Ð²Ð°.",
                    sl: "Å½al nam je, vendar trenutno ne moremo sprejemati stranke iz vaÅ¡e drÅ¾ave.",
                    el: "Î›Ï…Ï€Î¿ÏÎ¼Î±ÏƒÏ„Îµ, Î±Î»Î»Î¬ Î´ÎµÎ½ Î¼Ï€Î¿ÏÎ¿ÏÎ¼Îµ Î½Î± Î´ÎµÏ‡Ï„Î¿ÏÎ¼Îµ Ï€ÎµÎ»Î¬Ï„ÎµÏ‚ Î±Ï€ÏŒ Ï„Î· Ï‡ÏŽÏÎ± ÏƒÎ±Ï‚ Ï€ÏÎ¿Ï‚ Ï„Î¿ Ï€Î±ÏÏŒÎ½",
                    sr: "Å½ao nam je, ali trenutno ne moÅ¾emo da prihvatimo klijente iz vaÅ¡e zemlje",
                    hr: "Å½ao nam je, no trenutaÄno ne moÅ¾emo prihvatiti klijenti iz vaÅ¡e zemlje."
                }
            }), "undefined" != typeof $) if (this.config = r.extend(this.config, e), this.config.apiUrl && this.config.platformUrl) {
            var n = $.get(this.config.apiUrl + "/location"),
                t = $.get(this.config.apiUrl + "/bonus?bonusType=full_registration"),
                i = $.get(this.config.apiUrl + "/currencies"), o = $.get(this.config.apiUrl + "/leads/allowed");
            $.when(n, t, i, o).done(this.gotAllData.bind(this))
        } else console.error("Lead form can not be initialized - required parameters are absent"); else console.error("jQuery is not available")
    }

    return _createClass(r, [{
        key: "gotAllData", value: function (e, n, t, i) {
            if (this.config.currenciesData = t[0], this.config.countryData = "object" === _typeof(e[0]) ? e[0] : null, this.config.bonusesData = "object" === _typeof(n[0]) && n[0].success ? n[0].bonuses : {}, this.config.isEligible = this.config.alwaysEligible || !("object" !== _typeof(i[0]) || !i[0].success) && i[0].allowed, this.config.bonusCurrency = r.getCurrency(this.config.countryData, this.config.bonusesData), this.config.lang = this.config.lang || this.config.countryData.language || "en", this.config.bonusAmount = this.config.bonusesData[this.config.bonusCurrency] || this.config.bonusesData.DEFAULT_CURRENCY || 0, "function" == typeof this.config.onInitDone) {
                var o = {
                    bonusCurrency: this.config.bonusCurrency,
                    bonusAmount: this.config.bonusAmount,
                    lang: this.config.lang,
                    isEligible: this.config.isEligible,
                    currencies: this.config.currenciesData,
                    countryData: this.config.countryData
                };
                "object" !== _typeof(n[0]) || n[0].success || (o.bonusesError = n[0].message), this.config.isEligible || (o.notEligibleMessage = this.translations.WE_ARE_CURRENTLY_CANNOT_ACCEPT_CUSTOMERS[this.config.language] || this.translations.WE_ARE_CURRENTLY_CANNOT_ACCEPT_CUSTOMERS.en), this.config.onInitDone(o)
            }
        }
    }, {
        key: "submit", value: function (t) {
            var i = this, e = "object" !== _typeof(t.trackingParams) ? {} : t.trackingParams, n = {
                email: t.email,
                password: t.password,
                currency: t.currency,
                firstName: t.firstName,
                lastName: t.lastName,
                phone: t.phone,
                accountType: void 0 === t.accountType ? 0 : t.accountType,
                language: this.leadLanguageMapping[this.config.language] || this.config.language,
                generateToken: !1,
                appSource: t.appSource || this.DEFAULT_APPSOURCE,
                kissmetricsUid: t.kissmetricsUid || "",
                uid: t.uid || ""
            };
            n = $.extend(e, t, n);
            var o = $.Deferred();
            return this.createLead(n).then(function (e) {
                if (t.autoLogin) setTimeout(function () {
                    i.simpleLogin({
                        email: t.email,
                        password: t.password,
                        remember: !1,
                        appSource: n.appSource
                    }).then(function (e) {
                        if (i.config.redirectOnSimpleLogin) {
                            var n = i.config.platformUrl + "/fxclient5/controllers/switching?cookie=" + encodeURI(e) + "&lang=" + i.config.lang;
                            return window.top.location = n, void o.resolve({
                                success: !0,
                                message: i.SUCCESS_AUTOLOGIN_REDIRECT,
                                cookie: e,
                                redirectUrl: n,
                                code: 0
                            })
                        }
                        "function" == typeof t.onSuccess && t.onSuccess(e), o.resolve({
                            success: !0,
                            message: i.SUCCESS_AUTOLOGIN,
                            cookie: e,
                            code: 0
                        })
                    }).fail(function (e) {
                        i.log(e), o.reject(r.extend({success: !1}, e))
                    })
                }, e.timeout); else {
                    if (delete e.timeout, e.code === i.ERROR_ACCOUNT_EXISTS_CODE) return void o.reject(e);
                    o.resolve(e)
                }
            }).fail(function (e) {
                i.log(e), o.reject(e)
            }), o.promise()
        }
    }, {
        key: "createLead", value: function (e) {
            var n = this, t = $.Deferred();
            return $.post(this.config.apiUrl + "/leads", e).then(function (e)
            {
                if(e.success === false) {
                    var message = n.ERROR_UNEXPECTED_SIMPLELOGIN_ERROR;

                    if(e.message) {
                        message = e.message;
                    }

                    t.reject({
                        message: message,
                        code: n.ERROR_UNEXPECTED_SIMPLELOGIN_ERROR_CODE
                    });
                }
                else {
                    "object" !== _typeof(e) && t.reject({
                        success: !1,
                        message: n.ERROR_UNEXPECTED_SERVER_RESULT,
                        code: n.ERROR_UNEXPECTED_SERVER_RESULT_CODE
                    }), e.success && t.resolve(r.extend(e, {
                        timeout: 2e3,
                        success: !0,
                        message: n.SUCCESS_LEAD_CREATED,
                        code: 0
                    })), e.message !== n.ERROR_ACCOUNT_EXISTS ? e.message !== n.ERROR_COUNTRY_FORBIDDEN ? e.message !== n.ERROR_TOO_MANY_REQUESTS ? t.reject({
                        success: !1,
                        message: n.ERROR_UNEXPECTED_RESULT,
                        code: n.ERROR_UNEXPECTED_RESULT_CODE
                    }) : t.reject({
                        success: !1,
                        message: n.ERROR_TOO_MANY_REQUESTS,
                        code: n.ERROR_TOO_MANY_REQUESTS_CODE
                    }) : t.reject({
                        success: !1,
                        message: n.ERROR_COUNTRY_FORBIDDEN,
                        code: n.ERROR_COUNTRY_FORBIDDEN_CODE
                    }) : t.resolve({
                        timeout: 1,
                        success: !1,
                        message: n.ERROR_ACCOUNT_EXISTS,
                        code: n.ERROR_ACCOUNT_EXISTS_CODE
                    })
                }
            }).fail(function (e) {
                return t.reject({
                    success: !1,
                    message: n.ERROR_UNEXPECTED_RESULT,
                    code: n.ERROR_UNEXPECTED_RESULT_CODE,
                    error: e
                })
            }), t.promise()
        }
    }, {
        key: "simpleLogin", value: function (e) {
            var n = this, t = $.Deferred();
            return $.ajax({
                url: this.config.platformUrl + "/fxclient5/controllers/crmws/simplelogin",
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(e)
            }).done(function (e) {
                e.cookies && "object" === _typeof(e) ? t.resolve(e.cookies) : t.reject({
                    message: n.ERROR_UNEXPECTED_SIMPLELOGIN_RESPONSE,
                    code: n.ERROR_UNEXPECTED_SIMPLELOGIN_RESPONSE_CODE
                })
            }).fail(function (a, b, c) {
                t.reject({
                    message: n.ERROR_UNEXPECTED_SIMPLELOGIN_ERROR,
                    code: n.ERROR_UNEXPECTED_SIMPLELOGIN_ERROR_CODE
                })
            }), t.promise()
        }
    }, {
        key: "log", value: function (e) {
            this.config.isDebug && "undefined" != typeof console && console.log(e)
        }
    }], [{
        key: "extend", value: function () {
            var e = {};
            for (var n in arguments) {
                var t = arguments[n];
                for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
            }
            return e
        }
    }, {
        key: "getCurrency", value: function (e, n) {
            return e && "N/A" !== e.currencyCode && void 0 !== n[e.currencyCode] ? e.currencyCode : "USD"
        }
    }]), r
}();
