<?php
/**
 * @file
 * Custom Meta install
 */

/**
 * Implements hook_schema().
 * Define SQL table for custom_meta
 */
function custom_meta_schema() {
  $schema = array();

  $schema['custom_meta'] = array(
    'description' => 'Table to store meta tag attributes',
    'fields' => array(
      'meta_uid' => array(
        'description' => 'Unique id for the tag',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'meta_pages' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'List of paths on which to include the custom metatags.',
      ),
      'meta_attr' => array(
        'description' => 'Meta attribute name',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'meta_attr_value' => array(
        'description' => 'Meta attribute value',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'meta_content' => array(
        'description' => 'Meta content value',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('meta_uid'),
  );

  return $schema;
}

/**
 * Set system.weight so other modules can't alter output.
 * Add new field for page filtering.
 * @author @GDrupal
 */
function custom_meta_update_7000() {
  db_update('system')
    ->fields(array('weight' => '20'))
    ->condition('name', 'custom_meta')
    ->execute();
  $table = 'custom_meta';
  $schema = drupal_get_schema_unprocessed('custom_meta', $table);
  db_add_field($table, 'meta_pages', $schema['fields']['meta_pages']);
}
