<?php
/**
* Function to disable login page by ip
* @param function_parameter
* @returns function output description
*/

function disable_login_by_ip() {
    $disableLoginByIP = new DisableLoginByIP();

    $disableLoginByIP->Main();
}

class DisableLoginByIP {
    private function getUserIP()
    {
        // Get real visitor IP behind CloudFlare network
        if (isset($_SERVER["HTTP_CF_CONNECTING_IP"])) {
            $_SERVER['REMOTE_ADDR'] = $_SERVER["HTTP_CF_CONNECTING_IP"];
            $_SERVER['HTTP_CLIENT_IP'] = $_SERVER["HTTP_CF_CONNECTING_IP"];
        }
        $client  = @$_SERVER['HTTP_CLIENT_IP'];
        $forward = @$_SERVER['HTTP_X_FORWARDED_FOR'];
        $remote  = $_SERVER['REMOTE_ADDR'];

        if(filter_var($client, FILTER_VALIDATE_IP))
        {
            $ip = $client;
        }
        elseif(filter_var($forward, FILTER_VALIDATE_IP))
        {
            $ip = $forward;
        }
        else
        {
            $ip = $remote;
        }

        return $ip;
    }

    private function getConnection() {
        $dbName = 'lcm-instruments' ;
        $dbHost = '343ceac831677d3fdb2676ca6fd4913ba6e030d8.rackspaceclouddb.com' ;
        $dbUsername = 'partners';
        $dbUserPassword = 'Yee9piey7phu';

        $connection = new mysqli($dbHost, $dbUsername, $dbUserPassword, $dbName);

        // Check connection
        if ($connection->connect_error) {
            die("Connection failed: " . $connection->connect_error);
        }
        else if ($connection->connect_errno) {
            die("Failed to connect to MySQL: " . $connection->connect_errno);
        }

        return $connection;
    }

    private function isValidIP() {
        $connection = $this->getConnection();

        $userIP = $this->getUserIP();

        $query = "SELECT IP FROM DisableLoginByIP";

        $statement = $connection->prepare($query);

        $statement->execute();

        $result = $statement->get_result();

        $validIP = false;

        while($row = $result->fetch_assoc()) {

            if(trim($row['IP']) == $userIP) {
                $validIP = true;
				
				break;
            }
        }

        $connection = null;

        return $validIP;
    }

    private function redirectTo404() {
        $domain = $_SERVER['HTTP_HOST'];

        header("Location: https://".$domain."/en/404");

        exit();
    }

    public function Main() {
        $url = $_SERVER['REQUEST_URI'];

        if (strpos($url, '/user') > 0 || strpos($url, '/admin') > 0) {
            if(!$this->isValidIP()) {
                $this->redirectTo404();
            }
        }
    }
}








